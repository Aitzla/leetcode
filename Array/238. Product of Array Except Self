int* productExceptSelf(int* nums, int numsSize, int* returnSize){
    int left[numsSize];
    int right[numsSize];

    left[0] = nums[0];
    for(int i = 1 ; i < numsSize ; i++)
    {
        left[i] = left[i-1] * nums[i];
    }

    right[numsSize - 1] = nums[numsSize - 1];
    for(int i = numsSize - 1 - 1 ; i >= 0 ; i--)
    {
        right[i] = right[i+1] * nums[i];
    }

    *returnSize = numsSize;
    int *ans = (int*)malloc(sizeof(int)*numsSize);

    for(int i = 0 ; i <= numsSize - 1 ; i++)
    {
        if(i == 0)
        {
            ans[i] = right[i+1];
        }else if(i == numsSize - 1){
            ans[i] = left[i-1];
        }else{
            ans[i] = left[i-1] * right[i+1];
        }
    }
    return ans;
}
