#121. Best Time to Buy and Sell Stock

You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

*  input : price = [7,1,5,3,6,4]
*  output : 5
*  Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.

---------------------------------------------------------
#想法

1.暴力解
int maxprofit(int* prices, int pricesSize)
{
  int maxprofit = 0;
  int profit = 0;
  for(int i = 0 ; i < pricesSize ; i++)
  {
    for(int j = i+1 ; j < pricesSize ; j++)
    {
       profit = prices[j]-prices[i];
       maxprofit = fmax(maxprofit , profit);
    }
  }

  return maxprofit;
}

把所有獲利算出來，更新每次最大獲利，最後輸出最大獲利，但時間複雜度為O(n^2)，會超時。
---------------------------------------------------------
2.Greedy algorithm

int maxProfit(int* prices, int pricesSize){
    int maxprofit = 0;
    int minprice = prices[0];
    for(int i = 0 ; i < pricesSize ; i++)
    {
        if(minprice > prices[i])
        {
            minprice = prices[i];
        }
        if(prices[i] - minprice > maxprofit)
        {
            maxprofit = prices[i] - minprice;
        }
    }   
    return maxprofit;
}

題目需要今天買後幾天在賣，需要更新最大獲利maxprofit與最小價格minprice。
當前價格小於最小價格，更新最小價格minprice，若價差大於我們最大獲利，更新最大獲利maxprofit。
