206. Reverse Linked List

Given the head of a singly linked list, reverse the list, and return the reversed list.

Example 1:
* Input: head = [1,2,3,4,5]
* Output: [5,4,3,2,1]

Example 2:
* Input: head = [1,2]
* Output: [2,1]

Example 3:
* Input: head = []
* Output: []
--------------------------------------------------------------
#想法
使用雙指針，去改變鏈表next指針方向
原來：  1  ->  2  ->  3  ->  4
      head
反轉：  1  <-  2  <-  3  <-  4
                           head
在1前面加上pre的指針，並將pre指向NULL;而cur指向頭節點
      1  ->  2  ->  3  ->  4
 pre cur
              1  <-  2  <-  3  <-  4
NULL <- pre  cur

接著cur往後，使用另一個指針保存，再來pre也往後，等於pre=cur
         1  <-  2  <-  3  <-  4
NULL <- pre    cur          
循環移動pre與cur指針，最後cur指向NULL，循環結束。
--------------------------------------------------------------
#代碼實現
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverseList(struct ListNode* head){
    struct ListNode* pre = NULL;
    struct ListNode* cur = head;
    struct ListNode* curnext;

    while(cur)
    {
        curnext = cur -> next; 
        cur -> next = pre;
        pre = cur;
        cur = curnext;
    }
    
    return pre;
}
